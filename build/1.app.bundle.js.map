{"version":3,"sources":["webpack:///1.app.bundle.js","webpack:///./js/components/ContactDetailsComponent.jsx"],"names":["webpackJsonp","71","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_reduxLittleRouter","ContactDetailsComponent","_React$Component","this","_this","getPrototypeOf","handleChange","bind","componentDidMount","setFocusOnTextBox","componentDidUpdate","setState","updateState","contact","isEditMode","firstName","focus","event","state","dataset","_this2","createElement","className","type","data-key","ref","input","onChange","lastName","href","aria-hidden","phone","map","phoneType","index","email","emailType","website","siteType","onClick","updateContact","Link","id","group_id","Component"],"mappings":"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","file":"1.app.bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 71:\n/*!***************************************************!*\\\n  !*** ./js/components/ContactDetailsComponent.jsx ***!\n  \\***************************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(/*! react */ 11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reduxLittleRouter = __webpack_require__(/*! redux-little-router */ 18);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ContactDetailsComponent = function (_React$Component) {\n\t    _inherits(ContactDetailsComponent, _React$Component);\n\t\n\t    function ContactDetailsComponent() {\n\t        _classCallCheck(this, ContactDetailsComponent);\n\t\n\t        var _this = _possibleConstructorReturn(this, (ContactDetailsComponent.__proto__ || Object.getPrototypeOf(ContactDetailsComponent)).call(this));\n\t\n\t        _this.handleChange = _this.handleChange.bind(_this);\n\t        _this.componentDidMount = _this.setFocusOnTextBox;\n\t        _this.componentDidUpdate = _this.setFocusOnTextBox;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(ContactDetailsComponent, [{\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {\n\t            this.setState({});\n\t            this.updateState(this.props);\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(props) {\n\t            this.updateState(props);\n\t        }\n\t    }, {\n\t        key: 'updateState',\n\t        value: function updateState(props) {\n\t            this.setState({\n\t                contact: props.contact\n\t            });\n\t        }\n\t    }, {\n\t        key: 'setFocusOnTextBox',\n\t        value: function setFocusOnTextBox() {\n\t            if (this.props.isEditMode) {\n\t                this.firstName.focus();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'handleChange',\n\t        value: function handleChange(event) {\n\t            var contact = this.state.contact;\n\t            contact[event.target.dataset['key']] = event.target.value;\n\t            this.updateState({\n\t                contact: contact\n\t            });\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var _this2 = this;\n\t\n\t            return _react2.default.createElement(\n\t                'div',\n\t                { className: 'contacts-details' },\n\t                this.state.contact !== -1 && _react2.default.createElement(\n\t                    'div',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'contact-header-details-container' },\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'contact-image-container img-circle' },\n\t                            _react2.default.createElement(\n\t                                'span',\n\t                                { className: 'name-initials' },\n\t                                'FL'\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'contact-name-container form-inline' },\n\t                            _react2.default.createElement(\n\t                                'h3',\n\t                                { className: 'company-name' },\n\t                                !this.props.isEditMode ? this.state.contact.firstName : _react2.default.createElement('input', { type: 'text', className: 'form-control',\n\t                                    'data-key': 'firstName',\n\t                                    ref: function ref(input) {\n\t                                        _this2.firstName = input;\n\t                                    },\n\t                                    onChange: this.handleChange, value: this.state.contact.firstName }),\n\t                                !this.props.isEditMode ? ' ' + this.state.contact.lastName : _react2.default.createElement('input', { type: 'text', className: 'form-control txt-last-name',\n\t                                    'data-key': 'lastName',\n\t                                    onChange: this.handleChange, value: this.state.contact.lastName })\n\t                            )\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'action-containers' },\n\t                        _react2.default.createElement('a', { href: '#', className: 'glyphicon glyphicon-envelope', 'aria-hidden': 'true' }),\n\t                        _react2.default.createElement('a', { href: '#', className: 'glyphicon glyphicon-facetime-video', 'aria-hidden': 'true' }),\n\t                        _react2.default.createElement('a', { href: '#', className: 'glyphicon glyphicon-phone', 'aria-hidden': 'true' }),\n\t                        _react2.default.createElement('a', { href: '#', className: 'glyphicon glyphicon-floppy-saved', 'aria-hidden': 'true' })\n\t                    ),\n\t                    _react2.default.createElement('hr', null),\n\t                    _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'contact-details-container' },\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'container-row' },\n\t                            this.state.contact.phone && this.state.contact.phone.map(function (phoneType, index) {\n\t                                return _react2.default.createElement(\n\t                                    'div',\n\t                                    { key: index, className: 'row' },\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-2 text-right text-muted bold' },\n\t                                        _react2.default.createElement(\n\t                                            'span',\n\t                                            null,\n\t                                            phoneType.type\n\t                                        )\n\t                                    ),\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-10' },\n\t                                        phoneType.value\n\t                                    )\n\t                                );\n\t                            })\n\t                        ),\n\t                        _react2.default.createElement('hr', null),\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'container-row' },\n\t                            this.state.contact.email && this.state.contact.email.map(function (emailType, index) {\n\t                                return _react2.default.createElement(\n\t                                    'div',\n\t                                    { key: index, className: 'row' },\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-2 text-right text-muted bold' },\n\t                                        _react2.default.createElement(\n\t                                            'span',\n\t                                            null,\n\t                                            emailType.type\n\t                                        )\n\t                                    ),\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-10' },\n\t                                        emailType.value\n\t                                    )\n\t                                );\n\t                            })\n\t                        ),\n\t                        _react2.default.createElement('hr', null),\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'container-row' },\n\t                            this.state.contact.website && this.state.contact.website.map(function (siteType, index) {\n\t                                return _react2.default.createElement(\n\t                                    'div',\n\t                                    { key: index, className: 'row' },\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-2 text-right text-muted bold' },\n\t                                        _react2.default.createElement(\n\t                                            'span',\n\t                                            null,\n\t                                            siteType.type\n\t                                        )\n\t                                    ),\n\t                                    _react2.default.createElement(\n\t                                        'div',\n\t                                        { className: 'col-xs-10' },\n\t                                        siteType.value\n\t                                    )\n\t                                );\n\t                            })\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'actions' },\n\t                            this.props.isEditMode ? _react2.default.createElement(\n\t                                'button',\n\t                                { className: 'btn btn-sm btn-default pull-right', onClick: this.props.updateContact(this.contact) },\n\t                                ' Done '\n\t                            ) : _react2.default.createElement(\n\t                                _reduxLittleRouter.Link,\n\t                                {\n\t                                    key: this.state.contact.id + ' - ' + this.state.contact.group_id,\n\t                                    className: 'btn btn-sm btn-default pull-right',\n\t                                    href: '/groups/' + this.state.contact.group_id + '/' + this.state.contact.id + '/edit' },\n\t                                'Edit'\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return ContactDetailsComponent;\n\t}(_react2.default.Component);\n\t\n\texports.default = ContactDetailsComponent;\n\t;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.app.bundle.js","import React from 'react';\nimport {Link} from 'redux-little-router';\nimport { Fragment } from 'redux-little-router';\n\nexport default class ContactDetailsComponent extends React.Component {\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this);\n        this.componentDidMount = this.setFocusOnTextBox;\n        this.componentDidUpdate = this.setFocusOnTextBox;\n    }\n\n    componentWillMount() {\n        this.setState({});\n        this.updateState(this.props);            \n    }\n\n    componentWillReceiveProps(props) {\n        this.updateState(props);\n    }\n\n    updateState(props) {\n        this.setState({\n            contact: props.contact\n        });\n    }\n\n    setFocusOnTextBox() {\n        if (this.props.isEditMode) {\n            this.firstName.focus();\n        }\n    }\n\n    handleChange(event) {\n        let contact = this.state.contact;\n        contact[event.target.dataset['key']] = event.target.value;\n        this.updateState({\n            contact\n        });\n    }\n\n    render () {\n        return (\n            <div className=\"contacts-details\">\n                {/* <Fragment forRoute='/groups/:group/:contact'> */}\n                    {this.state.contact !== -1 && \n                    <div>\n                        <div className=\"contact-header-details-container\">\n                            <div className=\"contact-image-container img-circle\">\n                                <span className=\"name-initials\">FL</span>\n                            </div>\n\n                            <div className=\"contact-name-container form-inline\">\n                                <h3 className=\"company-name\">\n                                    {\n                                        !this.props.isEditMode ? this.state.contact.firstName : \n                                        <input type=\"text\" className=\"form-control\" \n                                            data-key=\"firstName\" \n                                            ref={(input) => { this.firstName = input; }}\n                                            onChange={this.handleChange} value={this.state.contact.firstName} />\n                                    } \n\n                                    {\n                                        !this.props.isEditMode ? ' ' +  this.state.contact.lastName : \n                                        <input type=\"text\" className=\"form-control txt-last-name\"\n                                            data-key=\"lastName\"\n                                            onChange={this.handleChange} value={this.state.contact.lastName} />\n                                    } \n                                </h3>\n                            </div>\n                        </div>\n\n\n                        <div className=\"action-containers\">\n                            <a href=\"#\" className=\"glyphicon glyphicon-envelope\" aria-hidden=\"true\"></a>\n                            <a href=\"#\" className=\"glyphicon glyphicon-facetime-video\" aria-hidden=\"true\"></a>\n                            <a href=\"#\" className=\"glyphicon glyphicon-phone\" aria-hidden=\"true\"></a>\n                            <a href=\"#\" className=\"glyphicon glyphicon-floppy-saved\" aria-hidden=\"true\"></a>\n                        </div>\n\n                        <hr />\n\n                        <div className=\"contact-details-container\">\n                        \n                            <div className=\"container-row\">\n                                {\n                                    this.state.contact.phone && this.state.contact.phone.map((phoneType, index) => {\n                                    return <div key={index} className=\"row\">\n                                            \n                                            <div className=\"col-xs-2 text-right text-muted bold\">\n                                                <span>{phoneType.type}</span>\n                                            </div>\n\n                                            <div className=\"col-xs-10\">\n                                                {phoneType.value}\n                                            </div>\n                                        </div>\n\n                                    })\n\n                                }\n\n                            </div>\n\n                            <hr />\n\n                            <div className=\"container-row\">\n                                {\n                                    this.state.contact.email && this.state.contact.email.map((emailType, index) => {\n                                    return <div key={index} className=\"row\">\n                                            \n                                            <div className=\"col-xs-2 text-right text-muted bold\">\n                                                <span>{emailType.type}</span>\n                                            </div>\n\n                                            <div className=\"col-xs-10\">\n                                                {emailType.value}\n                                            </div>\n                                        </div>\n\n                                    })\n\n                                }\n\n                            </div>\n\n                            <hr />\n\n                            <div className=\"container-row\">\n                                {\n                                    this.state.contact.website && this.state.contact.website.map((siteType, index) => {\n                                    return <div key={index} className=\"row\">\n                                            \n                                            <div className=\"col-xs-2 text-right text-muted bold\">\n                                                <span>{siteType.type}</span>\n                                            </div>\n\n                                            <div className=\"col-xs-10\">\n                                                {siteType.value}\n                                            </div>\n                                        </div>\n\n                                    })\n\n                                }\n\n                            </div>\n\n                            <div className=\"actions\">\n\n                                {\n                                    this.props.isEditMode ?  \n                                        <button className=\"btn btn-sm btn-default pull-right\" onClick={this.props.updateContact(this.contact)}> Done </button> : \n                                        \n                                        <Link \n                                            key={`${this.state.contact.id} - ${this.state.contact.group_id}`} \n                                            className='btn btn-sm btn-default pull-right' \n                                            href={`/groups/${this.state.contact.group_id}/${this.state.contact.id}/edit`}>\n                                            Edit\n                                        </Link>\n                                }\n\n                            </div>\n\n                        </div>\n                    </div>\n                    }\n                {/* </Fragment> */}\n            </div>\n                \n        )\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./js/components/ContactDetailsComponent.jsx"],"sourceRoot":""}